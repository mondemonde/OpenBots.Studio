/* 
 * OpenBots Server API
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = OpenBots.Service.API.Client.SwaggerDateConverter;

namespace OpenBots.Service.API.Model
{
    /// <summary>
    /// Body5
    /// </summary>
    [DataContract]
        public partial class Body5 :  IEquatable<Body5>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="Body5" /> class.
        /// </summary>
        /// <param name="id">id.</param>
        /// <param name="name">name.</param>
        /// <param name="organizationId">organizationId.</param>
        /// <param name="contentType">contentType.</param>
        /// <param name="correlationEntityId">correlationEntityId.</param>
        /// <param name="correlationEntity">correlationEntity.</param>
        /// <param name="storagePath">storagePath.</param>
        /// <param name="folder">folder.</param>
        /// <param name="storageProvider">storageProvider.</param>
        /// <param name="sizeInBytes">sizeInBytes.</param>
        /// <param name="hashCode">hashCode.</param>
        /// <param name="_file">_file.</param>
        public Body5(Guid? id = default(Guid?), string name = default(string), Guid? organizationId = default(Guid?), string contentType = default(string), Guid? correlationEntityId = default(Guid?), string correlationEntity = default(string), string storagePath = default(string), string folder = default(string), string storageProvider = default(string), long? sizeInBytes = default(long?), string hashCode = default(string), byte[] _file = default(byte[]))
        {
            this.Id = id;
            this.Name = name;
            this.OrganizationId = organizationId;
            this.ContentType = contentType;
            this.CorrelationEntityId = correlationEntityId;
            this.CorrelationEntity = correlationEntity;
            this.StoragePath = storagePath;
            this.Folder = folder;
            this.StorageProvider = storageProvider;
            this.SizeInBytes = sizeInBytes;
            this.HashCode = hashCode;
            this.File = _file;
        }
        
        /// <summary>
        /// Gets or Sets Id
        /// </summary>
        [DataMember(Name="Id", EmitDefaultValue=false)]
        public Guid? Id { get; set; }

        /// <summary>
        /// Gets or Sets Name
        /// </summary>
        [DataMember(Name="Name", EmitDefaultValue=false)]
        public string Name { get; set; }

        /// <summary>
        /// Gets or Sets OrganizationId
        /// </summary>
        [DataMember(Name="OrganizationId", EmitDefaultValue=false)]
        public Guid? OrganizationId { get; set; }

        /// <summary>
        /// Gets or Sets ContentType
        /// </summary>
        [DataMember(Name="ContentType", EmitDefaultValue=false)]
        public string ContentType { get; set; }

        /// <summary>
        /// Gets or Sets CorrelationEntityId
        /// </summary>
        [DataMember(Name="CorrelationEntityId", EmitDefaultValue=false)]
        public Guid? CorrelationEntityId { get; set; }

        /// <summary>
        /// Gets or Sets CorrelationEntity
        /// </summary>
        [DataMember(Name="CorrelationEntity", EmitDefaultValue=false)]
        public string CorrelationEntity { get; set; }

        /// <summary>
        /// Gets or Sets StoragePath
        /// </summary>
        [DataMember(Name="StoragePath", EmitDefaultValue=false)]
        public string StoragePath { get; set; }

        /// <summary>
        /// Gets or Sets Folder
        /// </summary>
        [DataMember(Name="Folder", EmitDefaultValue=false)]
        public string Folder { get; set; }

        /// <summary>
        /// Gets or Sets StorageProvider
        /// </summary>
        [DataMember(Name="StorageProvider", EmitDefaultValue=false)]
        public string StorageProvider { get; set; }

        /// <summary>
        /// Gets or Sets SizeInBytes
        /// </summary>
        [DataMember(Name="SizeInBytes", EmitDefaultValue=false)]
        public long? SizeInBytes { get; set; }

        /// <summary>
        /// Gets or Sets HashCode
        /// </summary>
        [DataMember(Name="HashCode", EmitDefaultValue=false)]
        public string HashCode { get; set; }

        /// <summary>
        /// Gets or Sets File
        /// </summary>
        [DataMember(Name="File", EmitDefaultValue=false)]
        public byte[] File { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class Body5 {\n");
            sb.Append("  Id: ").Append(Id).Append("\n");
            sb.Append("  Name: ").Append(Name).Append("\n");
            sb.Append("  OrganizationId: ").Append(OrganizationId).Append("\n");
            sb.Append("  ContentType: ").Append(ContentType).Append("\n");
            sb.Append("  CorrelationEntityId: ").Append(CorrelationEntityId).Append("\n");
            sb.Append("  CorrelationEntity: ").Append(CorrelationEntity).Append("\n");
            sb.Append("  StoragePath: ").Append(StoragePath).Append("\n");
            sb.Append("  Folder: ").Append(Folder).Append("\n");
            sb.Append("  StorageProvider: ").Append(StorageProvider).Append("\n");
            sb.Append("  SizeInBytes: ").Append(SizeInBytes).Append("\n");
            sb.Append("  HashCode: ").Append(HashCode).Append("\n");
            sb.Append("  File: ").Append(File).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as Body5);
        }

        /// <summary>
        /// Returns true if Body5 instances are equal
        /// </summary>
        /// <param name="input">Instance of Body5 to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(Body5 input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.Id == input.Id ||
                    (this.Id != null &&
                    this.Id.Equals(input.Id))
                ) && 
                (
                    this.Name == input.Name ||
                    (this.Name != null &&
                    this.Name.Equals(input.Name))
                ) && 
                (
                    this.OrganizationId == input.OrganizationId ||
                    (this.OrganizationId != null &&
                    this.OrganizationId.Equals(input.OrganizationId))
                ) && 
                (
                    this.ContentType == input.ContentType ||
                    (this.ContentType != null &&
                    this.ContentType.Equals(input.ContentType))
                ) && 
                (
                    this.CorrelationEntityId == input.CorrelationEntityId ||
                    (this.CorrelationEntityId != null &&
                    this.CorrelationEntityId.Equals(input.CorrelationEntityId))
                ) && 
                (
                    this.CorrelationEntity == input.CorrelationEntity ||
                    (this.CorrelationEntity != null &&
                    this.CorrelationEntity.Equals(input.CorrelationEntity))
                ) && 
                (
                    this.StoragePath == input.StoragePath ||
                    (this.StoragePath != null &&
                    this.StoragePath.Equals(input.StoragePath))
                ) && 
                (
                    this.Folder == input.Folder ||
                    (this.Folder != null &&
                    this.Folder.Equals(input.Folder))
                ) && 
                (
                    this.StorageProvider == input.StorageProvider ||
                    (this.StorageProvider != null &&
                    this.StorageProvider.Equals(input.StorageProvider))
                ) && 
                (
                    this.SizeInBytes == input.SizeInBytes ||
                    (this.SizeInBytes != null &&
                    this.SizeInBytes.Equals(input.SizeInBytes))
                ) && 
                (
                    this.HashCode == input.HashCode ||
                    (this.HashCode != null &&
                    this.HashCode.Equals(input.HashCode))
                ) && 
                (
                    this.File == input.File ||
                    (this.File != null &&
                    this.File.Equals(input.File))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Id != null)
                    hashCode = hashCode * 59 + this.Id.GetHashCode();
                if (this.Name != null)
                    hashCode = hashCode * 59 + this.Name.GetHashCode();
                if (this.OrganizationId != null)
                    hashCode = hashCode * 59 + this.OrganizationId.GetHashCode();
                if (this.ContentType != null)
                    hashCode = hashCode * 59 + this.ContentType.GetHashCode();
                if (this.CorrelationEntityId != null)
                    hashCode = hashCode * 59 + this.CorrelationEntityId.GetHashCode();
                if (this.CorrelationEntity != null)
                    hashCode = hashCode * 59 + this.CorrelationEntity.GetHashCode();
                if (this.StoragePath != null)
                    hashCode = hashCode * 59 + this.StoragePath.GetHashCode();
                if (this.Folder != null)
                    hashCode = hashCode * 59 + this.Folder.GetHashCode();
                if (this.StorageProvider != null)
                    hashCode = hashCode * 59 + this.StorageProvider.GetHashCode();
                if (this.SizeInBytes != null)
                    hashCode = hashCode * 59 + this.SizeInBytes.GetHashCode();
                if (this.HashCode != null)
                    hashCode = hashCode * 59 + this.HashCode.GetHashCode();
                if (this.File != null)
                    hashCode = hashCode * 59 + this.File.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }
}
