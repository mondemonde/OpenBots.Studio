/* 
 * OpenBots Server API
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = OpenBots.Service.API.Client.SwaggerDateConverter;

namespace OpenBots.Service.API.Model
{
    /// <summary>
    /// JobsLookupViewModel
    /// </summary>
    [DataContract]
        public partial class JobsLookupViewModel :  IEquatable<JobsLookupViewModel>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="JobsLookupViewModel" /> class.
        /// </summary>
        /// <param name="agentsLookup">agentsLookup.</param>
        /// <param name="processLookup">processLookup.</param>
        public JobsLookupViewModel(List<JobAgentsLookup> agentsLookup = default(List<JobAgentsLookup>), List<JobProcessLookup> processLookup = default(List<JobProcessLookup>))
        {
            this.AgentsLookup = agentsLookup;
            this.ProcessLookup = processLookup;
        }
        
        /// <summary>
        /// Gets or Sets AgentsLookup
        /// </summary>
        [DataMember(Name="agentsLookup", EmitDefaultValue=false)]
        public List<JobAgentsLookup> AgentsLookup { get; set; }

        /// <summary>
        /// Gets or Sets ProcessLookup
        /// </summary>
        [DataMember(Name="processLookup", EmitDefaultValue=false)]
        public List<JobProcessLookup> ProcessLookup { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class JobsLookupViewModel {\n");
            sb.Append("  AgentsLookup: ").Append(AgentsLookup).Append("\n");
            sb.Append("  ProcessLookup: ").Append(ProcessLookup).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as JobsLookupViewModel);
        }

        /// <summary>
        /// Returns true if JobsLookupViewModel instances are equal
        /// </summary>
        /// <param name="input">Instance of JobsLookupViewModel to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(JobsLookupViewModel input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.AgentsLookup == input.AgentsLookup ||
                    this.AgentsLookup != null &&
                    input.AgentsLookup != null &&
                    this.AgentsLookup.SequenceEqual(input.AgentsLookup)
                ) && 
                (
                    this.ProcessLookup == input.ProcessLookup ||
                    this.ProcessLookup != null &&
                    input.ProcessLookup != null &&
                    this.ProcessLookup.SequenceEqual(input.ProcessLookup)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.AgentsLookup != null)
                    hashCode = hashCode * 59 + this.AgentsLookup.GetHashCode();
                if (this.ProcessLookup != null)
                    hashCode = hashCode * 59 + this.ProcessLookup.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }
}
