/* 
 * OpenBots Server API
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = OpenBots.Service.API.Client.SwaggerDateConverter;

namespace OpenBots.Service.API.Model
{
    /// <summary>
    /// OrganizationCard
    /// </summary>
    [DataContract]
        public partial class OrganizationCard :  IEquatable<OrganizationCard>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="OrganizationCard" /> class.
        /// </summary>
        /// <param name="id">id.</param>
        /// <param name="name">name.</param>
        /// <param name="createdBy">createdBy.</param>
        /// <param name="createdOn">createdOn.</param>
        /// <param name="joinedOn">joinedOn.</param>
        /// <param name="canLeave">canLeave.</param>
        /// <param name="canDelete">canDelete.</param>
        /// <param name="isOrganizationMember">isOrganizationMember.</param>
        public OrganizationCard(Guid? id = default(Guid?), string name = default(string), string createdBy = default(string), DateTime? createdOn = default(DateTime?), DateTime? joinedOn = default(DateTime?), bool? canLeave = default(bool?), bool? canDelete = default(bool?), bool? isOrganizationMember = default(bool?))
        {
            this.Id = id;
            this.Name = name;
            this.CreatedBy = createdBy;
            this.CreatedOn = createdOn;
            this.JoinedOn = joinedOn;
            this.CanLeave = canLeave;
            this.CanDelete = canDelete;
            this.IsOrganizationMember = isOrganizationMember;
        }
        
        /// <summary>
        /// Gets or Sets Id
        /// </summary>
        [DataMember(Name="id", EmitDefaultValue=false)]
        public Guid? Id { get; set; }

        /// <summary>
        /// Gets or Sets Name
        /// </summary>
        [DataMember(Name="name", EmitDefaultValue=false)]
        public string Name { get; set; }

        /// <summary>
        /// Gets or Sets CreatedBy
        /// </summary>
        [DataMember(Name="createdBy", EmitDefaultValue=false)]
        public string CreatedBy { get; set; }

        /// <summary>
        /// Gets or Sets CreatedOn
        /// </summary>
        [DataMember(Name="createdOn", EmitDefaultValue=false)]
        public DateTime? CreatedOn { get; set; }

        /// <summary>
        /// Gets or Sets JoinedOn
        /// </summary>
        [DataMember(Name="joinedOn", EmitDefaultValue=false)]
        public DateTime? JoinedOn { get; set; }

        /// <summary>
        /// Gets or Sets CanLeave
        /// </summary>
        [DataMember(Name="canLeave", EmitDefaultValue=false)]
        public bool? CanLeave { get; set; }

        /// <summary>
        /// Gets or Sets CanDelete
        /// </summary>
        [DataMember(Name="canDelete", EmitDefaultValue=false)]
        public bool? CanDelete { get; set; }

        /// <summary>
        /// Gets or Sets IsOrganizationMember
        /// </summary>
        [DataMember(Name="isOrganizationMember", EmitDefaultValue=false)]
        public bool? IsOrganizationMember { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class OrganizationCard {\n");
            sb.Append("  Id: ").Append(Id).Append("\n");
            sb.Append("  Name: ").Append(Name).Append("\n");
            sb.Append("  CreatedBy: ").Append(CreatedBy).Append("\n");
            sb.Append("  CreatedOn: ").Append(CreatedOn).Append("\n");
            sb.Append("  JoinedOn: ").Append(JoinedOn).Append("\n");
            sb.Append("  CanLeave: ").Append(CanLeave).Append("\n");
            sb.Append("  CanDelete: ").Append(CanDelete).Append("\n");
            sb.Append("  IsOrganizationMember: ").Append(IsOrganizationMember).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as OrganizationCard);
        }

        /// <summary>
        /// Returns true if OrganizationCard instances are equal
        /// </summary>
        /// <param name="input">Instance of OrganizationCard to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(OrganizationCard input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.Id == input.Id ||
                    (this.Id != null &&
                    this.Id.Equals(input.Id))
                ) && 
                (
                    this.Name == input.Name ||
                    (this.Name != null &&
                    this.Name.Equals(input.Name))
                ) && 
                (
                    this.CreatedBy == input.CreatedBy ||
                    (this.CreatedBy != null &&
                    this.CreatedBy.Equals(input.CreatedBy))
                ) && 
                (
                    this.CreatedOn == input.CreatedOn ||
                    (this.CreatedOn != null &&
                    this.CreatedOn.Equals(input.CreatedOn))
                ) && 
                (
                    this.JoinedOn == input.JoinedOn ||
                    (this.JoinedOn != null &&
                    this.JoinedOn.Equals(input.JoinedOn))
                ) && 
                (
                    this.CanLeave == input.CanLeave ||
                    (this.CanLeave != null &&
                    this.CanLeave.Equals(input.CanLeave))
                ) && 
                (
                    this.CanDelete == input.CanDelete ||
                    (this.CanDelete != null &&
                    this.CanDelete.Equals(input.CanDelete))
                ) && 
                (
                    this.IsOrganizationMember == input.IsOrganizationMember ||
                    (this.IsOrganizationMember != null &&
                    this.IsOrganizationMember.Equals(input.IsOrganizationMember))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Id != null)
                    hashCode = hashCode * 59 + this.Id.GetHashCode();
                if (this.Name != null)
                    hashCode = hashCode * 59 + this.Name.GetHashCode();
                if (this.CreatedBy != null)
                    hashCode = hashCode * 59 + this.CreatedBy.GetHashCode();
                if (this.CreatedOn != null)
                    hashCode = hashCode * 59 + this.CreatedOn.GetHashCode();
                if (this.JoinedOn != null)
                    hashCode = hashCode * 59 + this.JoinedOn.GetHashCode();
                if (this.CanLeave != null)
                    hashCode = hashCode * 59 + this.CanLeave.GetHashCode();
                if (this.CanDelete != null)
                    hashCode = hashCode * 59 + this.CanDelete.GetHashCode();
                if (this.IsOrganizationMember != null)
                    hashCode = hashCode * 59 + this.IsOrganizationMember.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }
}
